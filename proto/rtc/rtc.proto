syntax = "proto3";

option go_package = "github.com/pion/ion/proto/rtc";

package rtc;

service RTC {
  rpc Signal(stream Request) returns (stream Reply) {}
}

message JoinRequest {
  string sid = 1;
  string uid = 2;
  map<string, string> config = 3;
  SessionDescription description = 4;
}

message JoinReply {
  bool success = 1;
  Error error = 2;
  SessionDescription description = 3;
}

enum Target {
  PUBLISHER = 0;
  SUBSCRIBER = 1;
}

message SessionDescription {
  Target target = 1;
  // 'offer' | 'answer'
  string type = 2;
  // sdp contents
  string sdp = 3;
}

message Trickle {
  Target target = 1;
  string init = 2;
}

message Error {
  int32 code = 1;
  string reason = 2;
}

message Simulcast {
  // 'f' | 'h' | 'q'
  string rid = 1;
  // 'send' | 'recv'
  string direction = 2;
  string parameters = 3;
};

enum MediaType {
  MediaUnknown = 0;
  UserMedia = 1;
  ScreenCapture = 2;
  Canvas = 3;
  Streaming =4;
  VoIP = 5;
}

message Track {
  // track id
  string id = 1;
  // MediaType
  MediaType type = 2;
  // stream id
  string stream_id = 3;
  // 'audio' | 'video' | 'data'
  string kind = 4;
  // true | false
  bool muted = 5;
  // rid for video track
  string rid = 6;
  // Simulcast
  repeated Simulcast simulcast = 7;
}

message TrackEvent {
  enum State {
    ADD = 0;
    UPDATE = 1;
    REMOVE = 2;
  }
  State state = 1;
   // user id
  string uid = 2;
  repeated Track tracks = 3;
}

message SubscriptionRequest {
  repeated string trackIds = 1;
  bool subscribe = 2;
}

message SubscriptionReply {
  bool success = 1;
  Error error = 2;
}

message AddTrackRequest {
  repeated Track tracks = 1;
}

message AddTrackReply {
  bool success = 1;
  Error error = 2;
}

message UpdateTrackRequest {
  message TrackInfo {
    string id = 1;
    bool muted = 2;
    MediaType type = 3;
  }
  repeated TrackInfo tracks = 1;
}

message UpdateTrackReply {
  bool success = 1;
  Error error = 2;
}

message Request {
  oneof payload {
    // Basic API Request
    JoinRequest join = 1;
    SessionDescription description = 2;
    Trickle trickle = 3;

    // Command
    SubscriptionRequest subscription = 4;
    AddTrackRequest addTrack = 5;
    UpdateTrackRequest updateTrack = 6;
  }
}

message Reply {
  oneof payload {
    // Basic API Reply
    JoinReply join = 1;
    SessionDescription description = 2;
    Trickle trickle = 3;

    // Event
    TrackEvent trackEvent = 4;

    // Command Reply
    SubscriptionReply subscription = 5;
    AddTrackReply addTrack = 6;
    UpdateTrackReply updateTrack = 7;

    // Error
    Error error = 8;
  }
}
