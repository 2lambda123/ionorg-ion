syntax = "proto3";

option go_package = "github.com/pion/ion/proto/rtc";

package rtc;

service RTC {
  rpc Signal(stream Request) returns (stream Reply) {}
}

message JoinRequest {
  string sid = 1;
  string uid = 2;
  map<string, string> config = 3;
  SessionDescription description = 4;
}

message JoinReply {
  bool success = 1;
  Error error = 2;
  SessionDescription description = 3;
}

enum Target {
  PUBLISHER = 0;
  SUBSCRIBER = 1;
}

enum MediaType {
  MediaUnknown = 0;
  UserMedia = 1;
  ScreenCapture = 2;
  Cavans = 3;
  Streaming = 4;
  VoIP = 5;
}

message VideoInfo {
  uint32 width = 1;
  uint32 height = 2;
  uint32 frameRate = 3;
  // Simulcast
  // {'f': 'send', 'h': 'send', 'q': 'send'}
  // {'f': 'recv', 'h': 'recv', 'q': 'recv'}
  map<string, string> simulcast = 4;
}

message TrackInfo {
  string id = 1;
  string kind = 2;
  bool muted = 3;
  MediaType type = 4;
  string streamId = 5;
  string label = 6;
  VideoInfo videoInfo = 7;
}

message SessionDescription {
  Target target = 1;
  // 'offer' | 'answer'
  string type = 2;
  // sdp contents
  string sdp = 3;
  // sdp metdata
  repeated TrackInfo trackInfos = 4;
}

message Trickle {
  Target target = 1;
  string init = 2;
}

message Error {
  int32 code = 1;
  string reason = 2;
}

message TrackEvent {
  enum State {
    ADD = 0;
    UPDATE = 1;
    REMOVE = 2;
  }
  State state = 1;
  string uid = 2;
  repeated TrackInfo tracks = 3;
}

message SubscriptionRequest {
  repeated string trackIds = 1;
  bool subscribe = 2;
}

message SubscriptionReply {
  bool success = 1;
  Error error = 2;
}

message UpdateTrackRequest {
  repeated TrackInfo tracks = 1;
}

message UpdateTrackReply {
  bool success = 1;
  Error error = 2;
}

message Request {
  oneof payload {
    // Basic API Request
    JoinRequest join = 1;
    SessionDescription description = 2;
    Trickle trickle = 3;

    // Command
    SubscriptionRequest subscription = 4;
    UpdateTrackRequest updateTrack = 5;
  }
}

message Reply {
  oneof payload {
    // Basic API Reply
    JoinReply join = 1;
    SessionDescription description = 2;
    Trickle trickle = 3;

    // Event
    TrackEvent trackEvent = 4;

    // Command Reply
    SubscriptionReply subscription = 5;
    UpdateTrackReply updateTrack = 6;

    // Error
    Error error = 7;
  }
}