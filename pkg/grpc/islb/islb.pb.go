// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.2
// source: protos/islb.proto

package islb

import (
	media "github.com/pion/ion/pkg/grpc/media"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeType int32

const (
	NodeType_SFU NodeType = 0
	NodeType_AVP NodeType = 1
	NodeType_GW  NodeType = 2
)

// Enum value maps for NodeType.
var (
	NodeType_name = map[int32]string{
		0: "SFU",
		1: "AVP",
		2: "GW",
	}
	NodeType_value = map[string]int32{
		"SFU": 0,
		"AVP": 1,
		"GW":  2,
	}
)

func (x NodeType) Enum() *NodeType {
	p := new(NodeType)
	*p = x
	return p
}

func (x NodeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_islb_proto_enumTypes[0].Descriptor()
}

func (NodeType) Type() protoreflect.EnumType {
	return &file_protos_islb_proto_enumTypes[0]
}

func (x NodeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeType.Descriptor instead.
func (NodeType) EnumDescriptor() ([]byte, []int) {
	return file_protos_islb_proto_rawDescGZIP(), []int{0}
}

type SessionState_State int32

const (
	SessionState_NEW    SessionState_State = 0
	SessionState_UPDATE SessionState_State = 1
	SessionState_DELETE SessionState_State = 2
)

// Enum value maps for SessionState_State.
var (
	SessionState_State_name = map[int32]string{
		0: "NEW",
		1: "UPDATE",
		2: "DELETE",
	}
	SessionState_State_value = map[string]int32{
		"NEW":    0,
		"UPDATE": 1,
		"DELETE": 2,
	}
)

func (x SessionState_State) Enum() *SessionState_State {
	p := new(SessionState_State)
	*p = x
	return p
}

func (x SessionState_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionState_State) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_islb_proto_enumTypes[1].Descriptor()
}

func (SessionState_State) Type() protoreflect.EnumType {
	return &file_protos_islb_proto_enumTypes[1]
}

func (x SessionState_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionState_State.Descriptor instead.
func (SessionState_State) EnumDescriptor() ([]byte, []int) {
	return file_protos_islb_proto_rawDescGZIP(), []int{4, 0}
}

type FindNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Condition:
	//	*FindNodeRequest_Sid
	//	*FindNodeRequest_Nid
	//	*FindNodeRequest_Type
	Condition isFindNodeRequest_Condition `protobuf_oneof:"condition"`
}

func (x *FindNodeRequest) Reset() {
	*x = FindNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_islb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNodeRequest) ProtoMessage() {}

func (x *FindNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_islb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNodeRequest.ProtoReflect.Descriptor instead.
func (*FindNodeRequest) Descriptor() ([]byte, []int) {
	return file_protos_islb_proto_rawDescGZIP(), []int{0}
}

func (m *FindNodeRequest) GetCondition() isFindNodeRequest_Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (x *FindNodeRequest) GetSid() string {
	if x, ok := x.GetCondition().(*FindNodeRequest_Sid); ok {
		return x.Sid
	}
	return ""
}

func (x *FindNodeRequest) GetNid() string {
	if x, ok := x.GetCondition().(*FindNodeRequest_Nid); ok {
		return x.Nid
	}
	return ""
}

func (x *FindNodeRequest) GetType() NodeType {
	if x, ok := x.GetCondition().(*FindNodeRequest_Type); ok {
		return x.Type
	}
	return NodeType_SFU
}

type isFindNodeRequest_Condition interface {
	isFindNodeRequest_Condition()
}

type FindNodeRequest_Sid struct {
	Sid string `protobuf:"bytes,1,opt,name=sid,proto3,oneof"`
}

type FindNodeRequest_Nid struct {
	Nid string `protobuf:"bytes,2,opt,name=nid,proto3,oneof"`
}

type FindNodeRequest_Type struct {
	Type NodeType `protobuf:"varint,3,opt,name=type,proto3,enum=islb.NodeType,oneof"`
}

func (*FindNodeRequest_Sid) isFindNodeRequest_Condition() {}

func (*FindNodeRequest_Nid) isFindNodeRequest_Condition() {}

func (*FindNodeRequest_Type) isFindNodeRequest_Condition() {}

type FindNodeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node []*Node `protobuf:"bytes,1,rep,name=node,proto3" json:"node,omitempty"`
}

func (x *FindNodeReply) Reset() {
	*x = FindNodeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_islb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindNodeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNodeReply) ProtoMessage() {}

func (x *FindNodeReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_islb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNodeReply.ProtoReflect.Descriptor instead.
func (*FindNodeReply) Descriptor() ([]byte, []int) {
	return file_protos_islb_proto_rawDescGZIP(), []int{1}
}

func (x *FindNodeReply) GetNode() []*Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nid  string   `protobuf:"bytes,1,opt,name=nid,proto3" json:"nid,omitempty"`
	Type NodeType `protobuf:"varint,2,opt,name=type,proto3,enum=islb.NodeType" json:"type,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_islb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_protos_islb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_protos_islb_proto_rawDescGZIP(), []int{2}
}

func (x *Node) GetNid() string {
	if x != nil {
		return x.Nid
	}
	return ""
}

func (x *Node) GetType() NodeType {
	if x != nil {
		return x.Type
	}
	return NodeType_SFU
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_islb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_protos_islb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_protos_islb_proto_rawDescGZIP(), []int{3}
}

type SessionState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node    *Node              `protobuf:"bytes,3,opt,name=node,proto3" json:"node,omitempty"`
	State   SessionState_State `protobuf:"varint,4,opt,name=state,proto3,enum=islb.SessionState_State" json:"state,omitempty"`
	Session *media.Session     `protobuf:"bytes,5,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *SessionState) Reset() {
	*x = SessionState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_islb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionState) ProtoMessage() {}

func (x *SessionState) ProtoReflect() protoreflect.Message {
	mi := &file_protos_islb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionState.ProtoReflect.Descriptor instead.
func (*SessionState) Descriptor() ([]byte, []int) {
	return file_protos_islb_proto_rawDescGZIP(), []int{4}
}

func (x *SessionState) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *SessionState) GetState() SessionState_State {
	if x != nil {
		return x.State
	}
	return SessionState_NEW
}

func (x *SessionState) GetSession() *media.Session {
	if x != nil {
		return x.Session
	}
	return nil
}

var File_protos_islb_proto protoreflect.FileDescriptor

var file_protos_islb_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x69, 0x73, 0x6c, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x04, 0x69, 0x73, 0x6c, 0x62, 0x1a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6c, 0x0a,
	0x0f, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x03, 0x73, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x03, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x6e, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x69, 0x73, 0x6c, 0x62, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0b,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2f, 0x0a, 0x0d, 0x46,
	0x69, 0x6e, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x69, 0x73, 0x6c,
	0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x3c, 0x0a, 0x04,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6e, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x69, 0x73, 0x6c, 0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0xb2, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x69, 0x73, 0x6c, 0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x69, 0x73, 0x6c, 0x62, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x28,
	0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x45, 0x57, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x2a, 0x24, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x46, 0x55, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x41, 0x56, 0x50, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x57, 0x10, 0x02, 0x32, 0x7c,
	0x0a, 0x04, 0x49, 0x53, 0x4c, 0x42, 0x12, 0x38, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x15, 0x2e, 0x69, 0x73, 0x6c, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x69, 0x73, 0x6c, 0x62,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x3a, 0x0a, 0x13, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x69, 0x73, 0x6c, 0x62, 0x2e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x0b, 0x2e, 0x69, 0x73,
	0x6c, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x28, 0x01, 0x42, 0x23, 0x5a, 0x21,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x69, 0x6f, 0x6e, 0x2f,
	0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x69, 0x73, 0x6c,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_islb_proto_rawDescOnce sync.Once
	file_protos_islb_proto_rawDescData = file_protos_islb_proto_rawDesc
)

func file_protos_islb_proto_rawDescGZIP() []byte {
	file_protos_islb_proto_rawDescOnce.Do(func() {
		file_protos_islb_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_islb_proto_rawDescData)
	})
	return file_protos_islb_proto_rawDescData
}

var file_protos_islb_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_protos_islb_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_protos_islb_proto_goTypes = []interface{}{
	(NodeType)(0),           // 0: islb.NodeType
	(SessionState_State)(0), // 1: islb.SessionState.State
	(*FindNodeRequest)(nil), // 2: islb.FindNodeRequest
	(*FindNodeReply)(nil),   // 3: islb.FindNodeReply
	(*Node)(nil),            // 4: islb.Node
	(*Empty)(nil),           // 5: islb.Empty
	(*SessionState)(nil),    // 6: islb.SessionState
	(*media.Session)(nil),   // 7: media.Session
}
var file_protos_islb_proto_depIdxs = []int32{
	0, // 0: islb.FindNodeRequest.type:type_name -> islb.NodeType
	4, // 1: islb.FindNodeReply.node:type_name -> islb.Node
	0, // 2: islb.Node.type:type_name -> islb.NodeType
	4, // 3: islb.SessionState.node:type_name -> islb.Node
	1, // 4: islb.SessionState.state:type_name -> islb.SessionState.State
	7, // 5: islb.SessionState.session:type_name -> media.Session
	2, // 6: islb.ISLB.FindNode:input_type -> islb.FindNodeRequest
	6, // 7: islb.ISLB.PublishSessionState:input_type -> islb.SessionState
	3, // 8: islb.ISLB.FindNode:output_type -> islb.FindNodeReply
	5, // 9: islb.ISLB.PublishSessionState:output_type -> islb.Empty
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_protos_islb_proto_init() }
func file_protos_islb_proto_init() {
	if File_protos_islb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_islb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_islb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindNodeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_islb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_islb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_islb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protos_islb_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*FindNodeRequest_Sid)(nil),
		(*FindNodeRequest_Nid)(nil),
		(*FindNodeRequest_Type)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_islb_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_islb_proto_goTypes,
		DependencyIndexes: file_protos_islb_proto_depIdxs,
		EnumInfos:         file_protos_islb_proto_enumTypes,
		MessageInfos:      file_protos_islb_proto_msgTypes,
	}.Build()
	File_protos_islb_proto = out.File
	file_protos_islb_proto_rawDesc = nil
	file_protos_islb_proto_goTypes = nil
	file_protos_islb_proto_depIdxs = nil
}
